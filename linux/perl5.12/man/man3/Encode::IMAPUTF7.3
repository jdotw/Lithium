.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Encode::IMAPUTF7 3"
.TH Encode::IMAPUTF7 3 "2010-06-18" "perl v5.12.4" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Encode::IMAPUTF7 \- modification of UTF\-7 encoding for IMAP
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  use Encode qw/encode decode/;
\&
\&  print encode(\*(AqIMAP\-UTF\-7\*(Aq, \*(AqRA\*~Xpertoire\*(Aq);
\&  print decode(\*(AqIMAP\-UTF\-7\*(Aq, R&AOk\-pertoire\*(Aq);
.Ve
.SH "ABSTRACT"
.IX Header "ABSTRACT"
\&\s-1IMAP\s0 mailbox names are encoded in a modified \s-1UTF7\s0 when names contains 
international characters outside of the printable \s-1ASCII\s0 range. The
modified \s-1UTF\-7\s0 encoding is defined in \s-1RFC2060\s0 (section 5.1.3).
.PP
There is another \s-1CPAN\s0 module with same purpose, Unicode::IMAPUtf7. However, it
works correctly only with strings, which encoded form does not
contain plus sign. For example, the Cyrillic string
\&\ex{043f}\ex{0440}\ex{0435}\ex{0434}\ex{043b}\ex{043e}\ex{0433} is represented in \s-1UTF\-7\s0 as
+BD8EQAQ1BDQEOwQ+BDM\- Note the second plus sign 4 characters before the end. 
Unicode::IMAPUtf7 encodes the above string as +BD8EQAQ1BDQEOwQ&BDM\- 
which is not valid modified \s-1UTF\-7\s0 (the ampersand and
the plus are swapped). The problem is solved by the current module,
which is slightly modified Encode::Unicode::UTF7 and has nothing common with
Unicode::IMAPUtf7.
.SH "RFC2060 \- section 5.1.3 \- Mailbox International Naming Convention"
.IX Header "RFC2060 - section 5.1.3 - Mailbox International Naming Convention"
By convention, international mailbox names are specified using a
modified version of the \s-1UTF\-7\s0 encoding described in [\s-1UTF\-7\s0].  The
purpose of these modifications is to correct the following problems
with \s-1UTF\-7:\s0
.PP
1) \s-1UTF\-7\s0 uses the \*(L"+\*(R" character for shifting; this conflicts with
   the common use of \*(L"+\*(R" in mailbox names, in particular \s-1USENET\s0
   newsgroup names.
.PP
2) \s-1UTF\-7\s0's encoding is \s-1BASE64\s0 which uses the \*(L"/\*(R" character; this
   conflicts with the use of \*(L"/\*(R" as a popular hierarchy delimiter.
.PP
3) \s-1UTF\-7\s0 prohibits the unencoded usage of \*(L"\e\*(R"; this conflicts with
   the use of \*(L"\e\*(R" as a popular hierarchy delimiter.
.PP
4) \s-1UTF\-7\s0 prohibits the unencoded usage of \*(L"~\*(R"; this conflicts with
   the use of \*(L"~\*(R" in some servers as a home directory indicator.
.PP
5) \s-1UTF\-7\s0 permits multiple alternate forms to represent the same
   string; in particular, printable US-ASCII chararacters can be
   represented in encoded form.
.PP
In modified \s-1UTF\-7\s0, printable US-ASCII characters except for \*(L"&\*(R"
represent themselves; that is, characters with octet values 0x20\-0x25
and 0x27\-0x7e.  The character \*(L"&\*(R" (0x26) is represented by the two\-
octet sequence \*(L"&\-\*(R".
.PP
All other characters (octet values 0x00\-0x1f, 0x7f\-0xff, and all
Unicode 16\-bit octets) are represented in modified \s-1BASE64\s0, with a
further modification from [\s-1UTF\-7\s0] that \*(L",\*(R" is used instead of \*(L"/\*(R".
Modified \s-1BASE64\s0 \s-1MUST\s0 \s-1NOT\s0 be used to represent any printing US-ASCII
character which can represent itself.
.PP
\&\*(L"&\*(R" is used to shift to modified \s-1BASE64\s0 and \*(L"\-\*(R" to shift back to \s-1US\-\s0
\&\s-1ASCII\s0.  All names start in US-ASCII, and \s-1MUST\s0 end in US-ASCII (that
is, a name that ends with a Unicode 16\-bit octet \s-1MUST\s0 end with a \*(L"\-
\&\*(R").
.PP
For example, here is a mailbox name which mixes English, Japanese,
and Chinese text: ~peter/mail/&ZeVnLIqe\-/&U,BTFw\-
.SH "REQUESTS & BUGS"
.IX Header "REQUESTS & BUGS"
Please report any requests, suggestions or bugs via the \s-1RT\s0 bug-tracking system 
at http://rt.cpan.org/ or email to bug\-Encode\-IMAPUTF7@rt.cpan.org.
.PP
http://rt.cpan.org/NoAuth/Bugs.html?Dist=Encode\-IMAPUTF7 is the \s-1RT\s0 queue for Encode::IMAPUTF7.
Please check to see if your bug has already been reported.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright 2005 Sava Chankov
.PP
Sava Chankov, sava@cpan.org
.PP
This software may be freely copied and distributed under the same
terms and conditions as Perl.
.SH "AUTHORS"
.IX Header "AUTHORS"
Peter Makholm <peter@makholm.net>, current maintainer
.PP
Sava Chankov <sava@cpan.org>, original author
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIperl\fR\|(1), Encode.
