dnl Process this file with autoconf to produce a configure script.
AC_INIT(src/resource.c)
AC_CONFIG_MACRO_DIR([m4])

VERSION=5.0.8
PACKAGE=induction

AM_INIT_AUTOMAKE($PACKAGE, $VERSION)

AM_MAINTAINER_MODE

AM_CONFIG_HEADER(src/build_config.h)

dnl Compiler flags
if test ! -n "${CFLAGS}"; then
   CFLAGS="-g -O2 -pipe -W -Wall -Wno-unused-parameter -Werror"
fi

dnl Checks for programs.
AC_PROG_CC
AC_ISC_POSIX
AM_PROG_LIBTOOL
AC_PROG_INSTALL
AC_PROG_LN_S

dnl Version defs
AC_DEFINE_UNQUOTED(INDUCTION_VERSION, "${VERSION}")

dnl Configuration headers
AM_CONFIG_HEADER(src/version.h)
AM_CONFIG_HEADER(src/bdb.h)

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADER(unistd.h, , AC_MSG_ERROR([Error : Induction requires unistd.h]))
AC_CHECK_HEADER(sys/stat.h, , AC_MSG_ERROR([Error : Induction requires sys/stat.h]))
AC_CHECK_HEADER(sys/types.h, , AC_MSG_ERROR([Error : Induction requires sys/type.h]))
AC_CHECK_HEADER(sys/ipc.h, , AC_MSG_ERROR([Error : Induction requires sys/ipc.h]))
AC_CHECK_HEADER(sys/socket.h, , AC_MSG_ERROR([Error : Induction requires sys/socket.h]))
AC_CHECK_HEADER(sys/wait.h, , AC_MSG_ERROR([Error : Induction requires sys/wait.h]))
AC_CHECK_HEADER(fcntl.h, , AC_MSG_ERROR([Error : Induction requires fcntl.h]))
AC_CHECK_HEADER(stdlib.h, , AC_MSG_ERROR([Error : Induction requires stdlib.h]))
AC_CHECK_HEADER(syslog.h, , AC_MSG_ERROR([Error : Induction requires syslog.h]))
AC_CHECK_HEADER(netinet/in.h, , AC_MSG_ERROR([Error : Induction requires netinet/in.h]))
AC_CHECK_HEADER(netdb.h, , AC_MSG_ERROR([Error : Induction requires netdb.h]))
AC_CHECK_HEADER(errno.h, , AC_MSG_ERROR([Error : Induction requires errno.h]))
AC_CHECK_HEADER(string.h, , AC_MSG_ERROR([Error : Induction requires string.h]))

dnl ###########################################
dnl Check for socklen_t

AC_MSG_CHECKING([for socklen_t])
AC_CACHE_VAL(i_socklen_t,
[AC_TRY_COMPILE([
#include <sys/types.h>
#include <sys/socket.h>],
[socklen_t t;],
i_socklen_t=yes,
i_socklen_t=no,
)])
if test $i_socklen_t = no; then
AC_DEFINE(socklen_t, int, Define to 'int' if <sys/socket.h> doesn't define.)
fi
AC_MSG_RESULT($i_socklen_t)

dnl ###########################################
dnl Check for Berkeley DB

AC_ARG_WITH(db-includes,
            [  --with-db-includes Specify location of Berkeley DB headerfiles],
            [db_incdir=$withval],
            [db_incdir=/usr/include])

AC_ARG_WITH(db-libs,
            [  --with-db-libs Specify location of Berkeley DB libraries],
            [db_libdir=$withval],
            [db_libdir=/usr/lib])

dnl NEED TO CHECK FOR DB LIB DIRECTORY TO DETERMINE VERSION

db_subdir_header="$db_incdir/db4/db.h"
db_header="$db_incdir/db.h"
echo "--------------------------------------------------------"
echo "*   Looking for Berkeley DB header files in    $db_incdir"
echo "*   Looking for Berkeley DB library files in   $db_libdir"
echo "*   Use --with-db-includes and --with-db-libs to set these locations"

CFLAGS="$CFLAGS -I$db_incdir"
old_ldflags="$LDFLAGS"
LDFLAGS="$LDFLAGS -L$db_libdir"

AC_CHECK_HEADER($db_subdir_header, AC_DEFINE(DB4_HEADER_SUBDIR), )
AC_CHECK_LIB(db-4, db_version, AC_DEFINE(HAVE_LIBDB_4), AC_CHECK_LIB(db, db_version, AC_DEFINE(HAVE_LIBDB_4),AC_MSG_ERROR([Error : Induction requires Berkeley DB]), ), )

LDFLAGS="$old_ldflags"

dnl ###########################################
dnl Check for libdl

AC_ARG_WITH(libdl-includes,
            [  --with-libdl-includes Specify location of libdl headerfiles],
            [libdl_incdir=$withval],
            [libdl_incdir=/usr/include])

libdl_header="$libdl_incdir/dlfcn.h"
echo "--------------------------------------------------------"
echo "*   Looking for libdl header files in     $libdl_incdir"
echo "*   Use --with-libdl-includes to set this location"

CFLAGS="$CFLAGS -I$libdl_incdir"

AC_CHECK_HEADER($libdl_header, , AC_MSG_ERROR([Error : Induction requires libdl's dlfcn.h]))

dnl ###########################################
dnl Check for libxml2

AC_ARG_WITH(xml-includes,
            [  --with-xml-includes Specify location of libxml2 headerfiles],
            [xml_incdir=$withval],
            [xml_incdir=/usr/include])

AC_ARG_WITH(xml-libs,
            [  --with-xml-libs Specify location of libxml2 libraries],
            [xml_libdir=$withval],
            [xml_libdir=/usr/lib])

xml_header="$xml_incdir/libxml/xmlexports.h"
echo "--------------------------------------------------------"
echo "*   Looking for libxml2 header files in    $xml_incdir"
echo "*   Looking for libxml2 library files in   $xml_libdir"
echo "*   Use --with-xml-includes and --with-xml-libs to set these locations"

CFLAGS="$CFLAGS -I$xml_incdir"

AC_CHECK_HEADER($xml_header, , AC_MSG_ERROR([Error : Induction requires libxml2's libxml/xmlexports.h]))

dnl ###########################################
dnl Check for postgresql 

AC_ARG_WITH(postgres-includes,
            [  --with-postgres-includes Specify location of PostgreSQL headerfiles],
            [postgres_incdir=$withval],
            [postgres_auto_incdir=yes])

AC_ARG_WITH(postgres-libs,
            [  --with-postgres-libs Specify location of PostgreSQL libraries],
            [postgres_libdir=$withval],
            [postgres_auto_libdir=yes])

if test $postgres_auto_incdir = "yes"; then
  postgres_incdir=`pg_config --includedir`
  if test ! $postgres_incdir; then
    postgres_incdir="/usr/include"
  fi
fi

if test $postgres_auto_libdir = "yes"; then
  postgres_libdir=`pg_config --libdir`
  if test ! $postgres_libdir; then
    postgres_libdir="/usr/lib"
  fi
fi

postgres_header="$postgres_incdir/libpq-fe.h"
echo "--------------------------------------------------------"
echo "*   Looking for PostgreSQL header files in    $postgres_incdir"
echo "*   Looking for PostgreSQL library files in   $postgres_libdir"
echo "*   Use --with-postgres-includes and --with-postgres-libs to set these locations"
            
CFLAGS="$CFLAGS -I$postgres_incdir"
LDFLAGS="$LDFLAGS -lssl -lcrypto -L$postgres_libdir"

AC_CHECK_HEADER($postgres_header, , AC_MSG_ERROR([Error : construct requires PostgreSQLs libpq-fe.h]))
AC_CHECK_LIB(pq, PQexec, , AC_MSG_ERROR([Error : construct requires PostgreSQL]), )

dnl ###########################################
dnl Check platform

echo "--------------------------------------------------------"

case $host_os in
  darwin*) echo "*  Darwin host detected ($host_os). Enabling waitpid in i_loop" ;
            AC_DEFINE(OS_DARWIN) ;;
esac

dnl ###########################################
dnl Create makefiles

echo "--------------------------------------------------------"
AC_OUTPUT(Makefile src/Makefile)

