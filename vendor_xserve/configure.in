dnl Process this file with autoconf to produce a configure script.
AC_INIT(src/data.c)

VERSION=5.0.9
PACKAGE=vendor_xserve

AM_INIT_AUTOMAKE($PACKAGE, $VERSION)

AM_MAINTAINER_MODE

AM_CONFIG_HEADER(src/config.h)

dnl Compiler flags
if test "${CFLAGS}" == "" ; then
  CFLAGS="-O2 -pipe -W -Wall -Wno-unused-parameter -Werror"
fi

dnl Checks for programs.
AC_PROG_CC
AC_ISC_POSIX
AM_PROG_LIBTOOL
AC_PROG_INSTALL
AC_PROG_LN_S

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADER(unistd.h, , AC_MSG_ERROR([Error : vendor_xserve requires unistd.h]))
AC_CHECK_HEADER(sys/stat.h, , AC_MSG_ERROR([Error : vendor_xserve requires sys/stat.h]))
AC_CHECK_HEADER(sys/types.h, , AC_MSG_ERROR([Error : vendor_xserve requires sys/type.h]))
AC_CHECK_HEADER(sys/ipc.h, , AC_MSG_ERROR([Error : vendor_xserve requires sys/ipc.h]))
AC_CHECK_HEADER(sys/socket.h, , AC_MSG_ERROR([Error : vendor_xserve requires sys/socket.h]))
AC_CHECK_HEADER(sys/wait.h, , AC_MSG_ERROR([Error : vendor_xserve requires sys/wait.h]))
AC_CHECK_HEADER(fcntl.h, , AC_MSG_ERROR([Error : vendor_xserve requires fcntl.h]))
AC_CHECK_HEADER(stdlib.h, , AC_MSG_ERROR([Error : vendor_xserve requires stdlib.h]))
AC_CHECK_HEADER(syslog.h, , AC_MSG_ERROR([Error : vendor_xserve requires syslog.h]))
AC_CHECK_HEADER(netinet/in.h, , AC_MSG_ERROR([Error : vendor_xserve requires netinet/in.h]))
AC_CHECK_HEADER(netdb.h, , AC_MSG_ERROR([Error : vendor_xserve requires netdb.h]))
AC_CHECK_HEADER(errno.h, , AC_MSG_ERROR([Error : vendor_xserve requires errno.h]))
AC_CHECK_HEADER(string.h, , AC_MSG_ERROR([Error : vendor_xserve requires string.h]))

dnl ###########################################
dnl Check for postgresql

AC_ARG_WITH(postgres-includes,
            [  --with-postgres-includes Specify location of PostgreSQL headerfiles],
            [postgres_incdir=$withval],
            [postgres_auto_incdir=yes])

if test $postgres_auto_incdir = "yes"; then
  postgres_incdir=`pg_config --includedir`
  if test ! $postgres_incdir; then
    postgres_incdir="/usr/include"
  fi
fi

postgres_header="$postgres_incdir/libpq-fe.h"
echo "--------------------------------------------------------"
echo "*   Looking for PostgreSQL header files in    $postgres_incdir"
echo "*   Use --with-postgres-includes to set these locations"
echo "--------------------------------------------------------"

CFLAGS="$CFLAGS -I$postgres_incdir"

AC_CHECK_HEADER($postgres_header, , AC_MSG_ERROR([Error : vendor_xserve requires PostgreSQLs libpq-fe.h]))

dnl ###########################################
dnl Check for libxml2

AC_ARG_WITH(xml-includes,
            [  --with-xml-includes Specify location of libxml2 headerfiles],
            [xml_incdir=$withval],
            [xml_incdir=/usr/include])

AC_ARG_WITH(xml-libs,
            [  --with-xml-libs Specify location of libxml2 libraries],
            [xml_libdir=$withval],
            [xml_libdir=/usr/lib])

xml_header="$xml_incdir/libxml/xmlexports.h"
echo "--------------------------------------------------------"
echo "*   Looking for libxml2 header files in    $xml_incdir"
echo "*   Looking for libxml2 library files in   $xml_libdir"
echo "*   Use --with-xml-includes and --with-xml-libs to set these locations"

CFLAGS="$CFLAGS -I$xml_incdir"

dnl ###########################################
dnl Check for induction

AC_ARG_WITH(induction-includes,
            [  --with-induction-includes Specify location of induction headerfiles],
            [induction_incdir=$withval],
            [induction_incdir=/usr/include])

induction_header="$induction_incdir/induction/version.h"
echo "--------------------------------------------------------"
echo "*   Looking for induction header files in     $induction_incdir"
echo "*   Use --with-induction-includes to set this locations"

CFLAGS="$CFLAGS -I$induction_incdir"

AC_CHECK_HEADER($induction_header, , AC_MSG_ERROR([Error : vendor_xserve requires induction's header files]))

dnl ###########################################
dnl Check for lithium

AC_ARG_WITH(lithium-includes,
            [  --with-lithium-includes Specify location of lithium headerfiles],
            [lithium_incdir=$withval],
            [lithium_incdir=/usr/include])

lithium_header="$lithium_incdir/lithium/config.h"
echo "--------------------------------------------------------"
echo "*   Looking for lithium header files in   $lithium_incdir"
echo "*   Use --with-lithium-includes to set this locations"

CFLAGS="$CFLAGS -I$lithium_incdir"

AC_CHECK_HEADER($lithium_header, , AC_MSG_ERROR([Error : vendor_xserve requires lithium's header files]))

dnl ########################################

AC_ARG_WITH(curl-includes,
            [  --with-curl-includes Specify location of curl headerfiles],
            [curl_incdir=$withval],
            [curl_incdir=/usr/include])

AC_ARG_WITH(curl-libs,
            [  --with-curl-libs Specify location of curl libraries],
            [curl_libdir=$withval],
            [curl_libdir=/usr/lib])

curl_header="$curl_incdir/curl/curl.h"
echo "--------------------------------------------------------"
echo "*   Looking for curl header files in   $curl_incdir"
echo "*   Use --with-curl-includes to set this locations"

CFLAGS="$CFLAGS -I$curl_incdir -L$curl_libdir"

AC_CHECK_LIB(curl, curl_easy_init, , AC_MSG_ERROR([Error : construct requires libCURL]), )

dnl ###########################################
dnl Check platform

echo "--------------------------------------------------------"
case $host_os in
  darwin*) echo "*   Darwin host detected ($host_os). Using -bundle -flat_namespace -undefined suppress link mode.";
            LDFLAGS="-bundle -flat_namespace -undefined suppress $LDFLAGS";;
  *) echo "*   Non-Darwin host detected ($host_os). Using -shared link mode.";
            LDFLAGS="-shared $LDFLAGS";;
esac

dnl ###########################################
dnl Create makefiles

echo "--------------------------------------------------------"
AC_OUTPUT(	Makefile 	\
            src/Makefile)
